{"version":3,"sources":["Header.js","Note.js","NotesList.js","App.js","index.js"],"names":["Header","props","react_default","a","createElement","className","onClick","addNote","type","placeholder","value","searchText","onChange","e","onSearch","target","Note","note","title","updatedValue","editMeId","id","onType","description","removeNote","NotesList","noteElements","notes","filter","doesMatchSearch","map","src_Note","key","App","state","Date","now","newNote","_this","setState","concat","Object","toConsumableArray","updatedKey","updatedNotes","text","newSearchText","toLowerCase","titleMatch","includes","descriptionMatch","hasMatch","noteId","stringifiedNotes","JSON","stringify","this","localStorage","setItem","getItem","savedNotes","parse","src_Header","src_NotesList","Component","rootElement","document","getElementById","ReactDOM","render","src_App"],"mappings":"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","file":"static/js/main.aa6906b5.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nconst Header = (props) => {\r\n  const callSearch = (e) => {\r\n    props.onSearch(e.target.value);\r\n  };\r\n  return (\r\n    <header>\r\n      <h1 className=\"app-header__title\">Super Sticky Notes</h1>\r\n      <aside className=\"app-header__controls\">\r\n        <button className=\"add-new\" onClick={props.addNote}>\r\n          + New Note\r\n        </button>\r\n        <input\r\n          className=\"search\"\r\n          type=\"text\"\r\n          placeholder=\"Type here to search...\"\r\n          value={props.searchText}\r\n          onChange={callSearch}\r\n        />\r\n      </aside>\r\n    </header>\r\n  );\r\n};\r\n\r\nexport default Header;\r\n","import React from \"react\";\r\n\r\nconst Note = (props) => {\r\n  const updateTitle = (e) => {\r\n    const updatedValue = e.target.value;\r\n    const editMeId = props.note.id;\r\n    props.onType(editMeId, \"title\", updatedValue);\r\n  };\r\n  const updateDescription = (e) => {\r\n    const updatedValue = e.target.value;\r\n    const editMeId = props.note.id;\r\n    props.onType(editMeId, \"description\", updatedValue);\r\n  };\r\n\r\n  const clickDelete = () => {\r\n    props.removeNote(props.note.id);\r\n  };\r\n  return (\r\n    <li className=\"note\">\r\n      <input\r\n        className=\"note__title\"\r\n        type=\"text\"\r\n        placeholder=\"Title\"\r\n        value={props.note.title}\r\n        onChange={updateTitle}\r\n      />\r\n      <textarea\r\n        className=\"note__description\"\r\n        placeholder=\"Description...\"\r\n        value={props.note.description}\r\n        onChange={updateDescription}\r\n      />\r\n      <span className=\"note__delete\" onClick={clickDelete}>\r\n        X\r\n      </span>\r\n    </li>\r\n  );\r\n};\r\n\r\nexport default Note;\r\n","import React from \"react\";\r\nimport Note from \"./Note.js\";\r\n\r\nconst NotesList = (props) => {\r\n  const keepSearchMatches = (note) => note.doesMatchSearch;\r\n  const searchMatches = props.notes.filter(keepSearchMatches);\r\n\r\n  const renderNote = (note) => (\r\n    <Note\r\n      removeNote={props.removeNote}\r\n      onType={props.onType}\r\n      note={note}\r\n      key={note.id}\r\n    />\r\n  );\r\n  const noteElements = searchMatches.map(renderNote);\r\n  return <ul className=\"notes-list\">{noteElements};</ul>;\r\n};\r\n\r\nexport default NotesList;\r\n","import React, { Component } from \"react\";\nimport Header from \"./Header.js\";\nimport NotesList from \"./NotesList.js\";\n\nclass App extends Component {\n  state = {\n    notes: [\n      {\n        id: Date.now(),\n        title: \"\",\n        description: \"\",\n        doesMatchSearch: true\n      }\n    ],\n    searchText: \"\"\n  };\n\n  addNote = () => {\n    const newNote = {\n      id: Date.now(),\n      title: \"\",\n      description: \"\",\n      doesMatchSearch: true\n    };\n    this.setState({ notes: [newNote, ...this.state.notes] });\n  };\n\n  onType = (editMeId, updatedKey, updatedValue) => {\n    //editMeId == id of the note that is edited\n    //updatedKey == title or description field\n    //updatedValue == value of the title or description\n    const updatedNotes = this.state.notes.map((note) => {\n      if (note.id !== editMeId) {\n        return note;\n      } else {\n        if (updatedKey === \"title\") {\n          note.title = updatedValue;\n          return note;\n        } else {\n          note.description = updatedValue;\n          return note;\n        }\n      }\n    });\n    this.setState({ notes: updatedNotes });\n  };\n\n  onSearch = (text) => {\n    const newSearchText = text.toLowerCase();\n    const updatedNotes = this.state.notes.map((note) => {\n      if (!newSearchText) {\n        note.doesMatchSearch = true;\n        return note;\n      } else {\n        const title = note.title.toLowerCase();\n        const description = note.description.toLowerCase();\n        const titleMatch = title.includes(newSearchText);\n        const descriptionMatch = description.includes(newSearchText);\n        const hasMatch = titleMatch || descriptionMatch;\n        note.doesMatchSearch = hasMatch;\n        return note;\n      }\n    });\n    this.setState({\n      notes: updatedNotes,\n      searchText: newSearchText\n    });\n  };\n\n  removeNote = (noteId) => {\n    const updatedNotes = this.state.notes.filter((note) => note.id !== noteId);\n    this.setState({ notes: updatedNotes });\n  };\n\n  componentDidUpdate() {\n    const stringifiedNotes = JSON.stringify(this.state.notes);\n    localStorage.setItem(\"savedNotes\", stringifiedNotes);\n  }\n\n  componentDidMount() {\n    const stringifiedNotes = localStorage.getItem(\"savedNotes\");\n    if (stringifiedNotes) {\n      const savedNotes = JSON.parse(stringifiedNotes);\n      this.setState({ notes: savedNotes });\n    }\n  }\n\n  render() {\n    return (\n      <div>\n        <Header\n          onSearch={this.onSearch}\n          addNote={this.addNote}\n          searchText={this.state.searchText}\n        />\n        <NotesList\n          removeNote={this.removeNote}\n          onType={this.onType}\n          notes={this.state.notes}\n        />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App.js\";\nimport \"./index.css\";\n\nconst rootElement = document.getElementById(\"root\");\nReactDOM.render(<App />, rootElement);\n"],"sourceRoot":""}